diff --git a/man/systemctl.xml b/man/systemctl.xml
index 08aacd8f41..a0b77eeb05 100644
--- a/man/systemctl.xml
+++ b/man/systemctl.xml
@@ -335,9 +335,10 @@
           <para>Just print what would be done. Currently supported by verbs
           <command>halt</command>, <command>poweroff</command>, <command>reboot</command>,
           <command>kexec</command>, <command>suspend</command>, <command>hibernate</command>,
-          <command>hybrid-sleep</command>, <command>suspend-then-hibernate</command>,
-          <command>default</command>, <command>rescue</command>,
-          <command>emergency</command>, and <command>exit</command>.</para>
+          <command>hibernate-then-reboot</command>, <command>hybrid-sleep</command>,
+          <command>suspend-then-hibernate</command>, <command>default</command>,
+          <command>rescue</command>, <command>emergency</command>, and
+          <command>exit</command>.</para>
         </listitem>
       </varlistentry>
 
@@ -1888,6 +1889,17 @@ Jan 12 10:46:45 example.com bluetoothd[8900]: gatt-time-server: Input/output err
           </listitem>
         </varlistentry>
 
+        <varlistentry>
+          <term><command>hibernate-then-reboot</command></term>
+
+          <listitem>
+            <para>Hibernate the system and reboot after the system is powered down. This will trigger activation of the
+            special target unit <filename>hibernate-then-reboot.target</filename>. This command is asynchronous, and
+            will return after the hibernation operation is successfully enqueued. It will not wait for the hibernate/thaw
+            cycle to complete.</para>
+          </listitem>
+        </varlistentry>
+
         <varlistentry>
           <term><command>hybrid-sleep</command></term>
 
diff --git a/man/systemd-sleep.conf.xml b/man/systemd-sleep.conf.xml
index 96e6d5e452..883a26a384 100644
--- a/man/systemd-sleep.conf.xml
+++ b/man/systemd-sleep.conf.xml
@@ -134,6 +134,7 @@
       <varlistentry>
         <term><varname>SuspendMode=</varname></term>
         <term><varname>HibernateMode=</varname></term>
+		<term><varname>HibernateRebootMode=</varname></term>
         <term><varname>HybridSleepMode=</varname></term>
 
         <listitem><para>The string to be written to
@@ -141,6 +142,7 @@
         respectively,
         <citerefentry><refentrytitle>systemd-suspend.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
         <citerefentry><refentrytitle>systemd-hibernate.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
+        <citerefentry><refentrytitle>systemd-hibernate-then-reboot.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
         <citerefentry><refentrytitle>systemd-hybrid-sleep.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>, or
         <citerefentry><refentrytitle>systemd-suspend-then-hibernate.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
         More than one value can be specified by separating
@@ -153,6 +155,7 @@
       <varlistentry>
         <term><varname>SuspendState=</varname></term>
         <term><varname>HibernateState=</varname></term>
+        <term><varname>HibernateRebootState=</varname></term>
         <term><varname>HybridSleepState=</varname></term>
 
         <listitem><para>The string to be written to
@@ -160,6 +163,7 @@
         respectively,
         <citerefentry><refentrytitle>systemd-suspend.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
         <citerefentry><refentrytitle>systemd-hibernate.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
+        <citerefentry><refentrytitle>systemd-hibernate-then-reboot.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
         <citerefentry><refentrytitle>systemd-hybrid-sleep.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>, or
         <citerefentry><refentrytitle>systemd-suspend-then-hibernate.service</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
         More than one value can be specified by separating
diff --git a/man/systemd-suspend.service.xml b/man/systemd-suspend.service.xml
index cef7adb671..ca238ec217 100644
--- a/man/systemd-suspend.service.xml
+++ b/man/systemd-suspend.service.xml
@@ -22,6 +22,7 @@
   <refnamediv>
     <refname>systemd-suspend.service</refname>
     <refname>systemd-hibernate.service</refname>
+    <refname>systemd-hibernate-then-reboot.service</refname>
     <refname>systemd-hybrid-sleep.service</refname>
     <refname>systemd-suspend-then-hibernate.service</refname>
     <refname>systemd-sleep</refname>
@@ -31,6 +32,7 @@
   <refsynopsisdiv>
     <para><filename>systemd-suspend.service</filename></para>
     <para><filename>systemd-hibernate.service</filename></para>
+    <para><filename>systemd-hibernate-then-reboot.service</filename></para>
     <para><filename>systemd-hybrid-sleep.service</filename></para>
     <para><filename>systemd-suspend-then-hibernate.service</filename></para>
     <para><filename>/usr/lib/systemd/system-sleep</filename></para>
@@ -44,9 +46,11 @@
     and is responsible for the actual system suspend. Similarly,
     <filename>systemd-hibernate.service</filename> is pulled in by
     <filename>hibernate.target</filename> to execute the actual
-    hibernation. Finally,
-    <filename>systemd-hybrid-sleep.service</filename> is pulled in by
-    <filename>hybrid-sleep.target</filename> to execute hybrid
+    hibernation. Likewise, <filename>systemd-hibernate-then-reboot.service</filename>
+    is pulled in by <filename>hibernate-then-reboot.service</filename>
+    to execute the hibernation, and after the system is turned off,
+    it will boot again. Finally, <filename>systemd-hybrid-sleep.service</filename>
+    is pulled in by <filename>hybrid-sleep.target</filename> to execute hybrid
     hibernation with system suspend and pulled in by
     <filename>suspend-then-hibernate.target</filename> to execute system suspend
     with a timeout that will activate hibernate later.</para>
@@ -58,6 +62,7 @@
     arguments to them. The first argument will be
     <literal>pre</literal>, the second either
     <literal>suspend</literal>, <literal>hibernate</literal>,
+    <literal>hibernate-then-reboot</literal>,
     <literal>hybrid-sleep</literal>, or <literal>suspend-then-hibernate</literal>
     depending on the chosen action.
     Immediately after leaving system suspend and/or hibernation the
@@ -76,7 +81,8 @@
 
     <para>Note that
     <filename>systemd-suspend.service</filename>,
-    <filename>systemd-hibernate.service</filename>, and
+    <filename>systemd-hibernate.service</filename>,
+    <filename>systemd-hibernate-then-reboot.service</filename>, and
     <filename>systemd-hybrid-sleep.service</filename>
     <filename>systemd-suspend-then-hibernate.service</filename>
     should never be executed directly. Instead, trigger system sleep
@@ -106,11 +112,12 @@
       <varlistentry>
         <term><option>suspend</option></term>
         <term><option>hibernate</option></term>
+        <term><option>hibernate-then-reboot</option></term>
         <term><option>hybrid-sleep</option></term>
         <term><option>suspend-then-hibernate</option></term>
 
-        <listitem><para>Suspend, hibernate, suspend then hibernate, or put the
-        system to hybrid sleep.</para>
+        <listitem><para>Suspend, hibernate, hibernate then reboot,
+        suspend then hibernate, or put the system to hybrid sleep.</para>
         </listitem>
       </varlistentry>
     </variablelist>
diff --git a/shell-completion/zsh/_systemctl.in b/shell-completion/zsh/_systemctl.in
index 590fc49604..c4f479566d 100644
--- a/shell-completion/zsh/_systemctl.in
+++ b/shell-completion/zsh/_systemctl.in
@@ -17,6 +17,7 @@
     "reload-or-restart:Reload one or more units if possible, otherwise start or restart"
     "force-reload:Reload one or more units if possible, otherwise restart if active"
     "hibernate:Hibernate the system"
+    "hibernate-then-reboot:Hibernate and reboot the system"
     "hybrid-sleep:Hibernate and suspend the system"
     "suspend-then-hibernate:Suspend the system for a period of time, and then hibernate it"
     "try-reload-or-restart:Reload one or more units if possible, otherwise restart if active"
diff --git a/src/basic/special.h b/src/basic/special.h
index 379a3d7979..6bb83e3ecd 100644
--- a/src/basic/special.h
+++ b/src/basic/special.h
@@ -17,6 +17,7 @@
 #define SPECIAL_EXIT_TARGET "exit.target"
 #define SPECIAL_SUSPEND_TARGET "suspend.target"
 #define SPECIAL_HIBERNATE_TARGET "hibernate.target"
+#define SPECIAL_HIBERNATE_THEN_REBOOT_TARGET "hibernate-then-reboot.target"
 #define SPECIAL_HYBRID_SLEEP_TARGET "hybrid-sleep.target"
 #define SPECIAL_SUSPEND_THEN_HIBERNATE_TARGET "suspend-then-hibernate.target"
 
diff --git a/src/shared/sleep-config.c b/src/shared/sleep-config.c
index 2e22bd0bbe..82202783b1 100644
--- a/src/shared/sleep-config.c
+++ b/src/shared/sleep-config.c
@@ -28,12 +28,13 @@
 #include "strv.h"
 
 int parse_sleep_config(const char *verb, bool *ret_allow, char ***ret_modes, char ***ret_states, usec_t *ret_delay) {
-        int allow_suspend = -1, allow_hibernate = -1,
+        int allow_suspend = -1, allow_hibernate = -1, allow_hibernate_then_reboot = -1,
             allow_s2h = -1, allow_hybrid_sleep = -1;
         bool allow;
         _cleanup_strv_free_ char
                 **suspend_mode = NULL, **suspend_state = NULL,
                 **hibernate_mode = NULL, **hibernate_state = NULL,
+                **hibernate_then_reboot_mode = NULL, **hibernate_then_reboot_state = NULL,
                 **hybrid_mode = NULL, **hybrid_state = NULL;
         _cleanup_strv_free_ char **modes, **states; /* always initialized below */
         usec_t delay = 180 * USEC_PER_MINUTE;
@@ -41,6 +42,7 @@ int parse_sleep_config(const char *verb, bool *ret_allow, char ***ret_modes, cha
         const ConfigTableItem items[] = {
                 { "Sleep", "AllowSuspend",              config_parse_tristate, 0, &allow_suspend },
                 { "Sleep", "AllowHibernation",          config_parse_tristate, 0, &allow_hibernate },
+                { "Sleep", "AllowHibernateThenReboot",  config_parse_tristate, 0, &allow_hibernate_then_reboot },
                 { "Sleep", "AllowSuspendThenHibernate", config_parse_tristate, 0, &allow_s2h },
                 { "Sleep", "AllowHybridSleep",          config_parse_tristate, 0, &allow_hybrid_sleep },
 
@@ -48,6 +50,8 @@ int parse_sleep_config(const char *verb, bool *ret_allow, char ***ret_modes, cha
                 { "Sleep", "SuspendState",              config_parse_strv, 0, &suspend_state },
                 { "Sleep", "HibernateMode",             config_parse_strv, 0, &hibernate_mode  },
                 { "Sleep", "HibernateState",            config_parse_strv, 0, &hibernate_state },
+                { "Sleep", "HibernateRebootMode",       config_parse_strv, 0, &hibernate_then_reboot_mode },
+                { "Sleep", "HibernateRebootState",      config_parse_strv, 0, &hibernate_then_reboot_state },
                 { "Sleep", "HybridSleepMode",           config_parse_strv, 0, &hybrid_mode  },
                 { "Sleep", "HybridSleepState",          config_parse_strv, 0, &hybrid_state },
 
@@ -84,6 +88,19 @@ int parse_sleep_config(const char *verb, bool *ret_allow, char ***ret_modes, cha
                 else
                         states = strv_new("disk");
 
+        } else if (streq(verb, "hibernate-then-reboot")) {
+                allow = allow_hibernate_then_reboot != 0;
+
+                if (hibernate_then_reboot_mode)
+                        modes = TAKE_PTR(hibernate_then_reboot_mode);
+                else
+                        modes = strv_new("reboot");
+
+                if (hibernate_then_reboot_state)
+                        states = TAKE_PTR(hibernate_then_reboot_state);
+                else
+                        states = strv_new("disk");
+
         } else if (streq(verb, "hybrid-sleep")) {
                 allow = allow_hybrid_sleep > 0 ||
                         (allow_suspend != 0 && allow_hibernate != 0);
@@ -106,7 +123,7 @@ int parse_sleep_config(const char *verb, bool *ret_allow, char ***ret_modes, cha
         } else
                 assert_not_reached("what verb");
 
-        if ((!modes && STR_IN_SET(verb, "hibernate", "hybrid-sleep")) ||
+        if ((!modes && STR_IN_SET(verb, "hibernate", "hybrid-sleep", "hibernate-then-reboot")) ||
             (!states && !streq(verb, "suspend-then-hibernate")))
                 return log_oom();
 
diff --git a/src/sleep/sleep.c b/src/sleep/sleep.c
index 5b7984a6f2..595f6f9d73 100644
--- a/src/sleep/sleep.c
+++ b/src/sleep/sleep.c
@@ -292,6 +292,7 @@ static int help(void) {
                "\nCommands:\n"
                "  suspend                Suspend the system\n"
                "  hibernate              Hibernate the system\n"
+               "  hibernate-then-reboot  Hibernate the system and reboots it\n"
                "  hybrid-sleep           Both hibernate and suspend the system\n"
                "  suspend-then-hibernate Initially suspend and then hibernate\n"
                "                         the system after a fixed period of time\n"
@@ -341,7 +342,7 @@ static int parse_argv(int argc, char *argv[]) {
 
         arg_verb = argv[optind];
 
-        if (!STR_IN_SET(arg_verb, "suspend", "hibernate", "hybrid-sleep", "suspend-then-hibernate"))
+        if (!STR_IN_SET(arg_verb, "suspend", "hibernate", "hybrid-sleep", "suspend-then-hibernate", "hibernate-then-reboot"))
                 return log_error_errno(SYNTHETIC_ERRNO(EINVAL),
                                        "Unknown command '%s'.", arg_verb);
 
diff --git a/src/sleep/sleep.conf b/src/sleep/sleep.conf
index dc2ed37f70..ac57aa881d 100644
--- a/src/sleep/sleep.conf
+++ b/src/sleep/sleep.conf
@@ -20,6 +20,8 @@
 #SuspendState=mem standby freeze
 #HibernateMode=platform shutdown
 #HibernateState=disk
+#HibernateRebootMode=reboot
+#HibernateRebootState=disk
 #HybridSleepMode=suspend platform shutdown
 #HybridSleepState=disk
 #HibernateDelaySec=180min
diff --git a/src/systemctl/systemctl.c b/src/systemctl/systemctl.c
index 63dae2c872..1cf2c85e94 100644
--- a/src/systemctl/systemctl.c
+++ b/src/systemctl/systemctl.c
@@ -145,6 +145,7 @@ static enum action {
         ACTION_EXIT,
         ACTION_SUSPEND,
         ACTION_HIBERNATE,
+        ACTION_HIBERNATE_THEN_REBOOT,
         ACTION_HYBRID_SLEEP,
         ACTION_SUSPEND_THEN_HIBERNATE,
         ACTION_RUNLEVEL2,
@@ -3072,6 +3073,7 @@ static const struct {
         [ACTION_EXIT]                 = { SPECIAL_EXIT_TARGET,                     "exit",                   "replace-irreversibly" },
         [ACTION_SUSPEND]              = { SPECIAL_SUSPEND_TARGET,                  "suspend",                "replace-irreversibly" },
         [ACTION_HIBERNATE]            = { SPECIAL_HIBERNATE_TARGET,                "hibernate",              "replace-irreversibly" },
+        [ACTION_HIBERNATE_THEN_REBOOT] = { SPECIAL_HIBERNATE_THEN_REBOOT_TARGET,   "hibernate-then-reboot",  "replace-irreversibly" },
         [ACTION_HYBRID_SLEEP]         = { SPECIAL_HYBRID_SLEEP_TARGET,             "hybrid-sleep",           "replace-irreversibly" },
         [ACTION_SUSPEND_THEN_HIBERNATE] = { SPECIAL_SUSPEND_THEN_HIBERNATE_TARGET, "suspend-then-hibernate", "replace-irreversibly" },
 };
@@ -3310,6 +3312,11 @@ static int logind_reboot(enum action a) {
                 description = "hibernate system";
                 break;
 
+        case ACTION_HIBERNATE_THEN_REBOOT:
+                method = "HibernateThenReboot";
+                description = "hibernate and reboot system";
+                break;
+
         case ACTION_HYBRID_SLEEP:
                 method = "HybridSleep";
                 description = "put system into hybrid sleep";
@@ -3679,6 +3686,7 @@ static int start_special(int argc, char *argv[], void *userdata) {
                            ACTION_HALT,
                            ACTION_SUSPEND,
                            ACTION_HIBERNATE,
+                           ACTION_HIBERNATE_THEN_REBOOT,
                            ACTION_HYBRID_SLEEP,
                            ACTION_SUSPEND_THEN_HIBERNATE)) {
 
@@ -7314,6 +7322,7 @@ static int systemctl_help(void) {
                "  switch-root ROOT [INIT]             Change to a different root file system\n"
                "  suspend                             Suspend the system\n"
                "  hibernate                           Hibernate the system\n"
+               "  hibernate-then-reboot               Hibernate and reboot the system\n"
                "  hybrid-sleep                        Hibernate and suspend the system\n"
                "  suspend-then-hibernate              Suspend the system, wake after a period of\n"
                "                                      time and put it into hibernate\n"
@@ -8454,6 +8463,7 @@ static int systemctl_main(int argc, char *argv[]) {
                 { "kexec",                 VERB_ANY, 1,        VERB_ONLINE_ONLY, start_system_special },
                 { "suspend",               VERB_ANY, 1,        VERB_ONLINE_ONLY, start_system_special },
                 { "hibernate",             VERB_ANY, 1,        VERB_ONLINE_ONLY, start_system_special },
+                { "hibernate-then-reboot", VERB_ANY, 1,        VERB_ONLINE_ONLY, start_system_special },
                 { "hybrid-sleep",          VERB_ANY, 1,        VERB_ONLINE_ONLY, start_system_special },
                 { "suspend-then-hibernate",VERB_ANY, 1,        VERB_ONLINE_ONLY, start_system_special },
                 { "default",               VERB_ANY, 1,        VERB_ONLINE_ONLY, start_special        },
@@ -8793,6 +8803,7 @@ static int run(int argc, char *argv[]) {
         case ACTION_EXIT:
         case ACTION_SUSPEND:
         case ACTION_HIBERNATE:
+        case ACTION_HIBERNATE_THEN_REBOOT:
         case ACTION_HYBRID_SLEEP:
         case ACTION_SUSPEND_THEN_HIBERNATE:
         case ACTION_EMERGENCY:
diff --git a/units/hibernate-then-reboot.target b/units/hibernate-then-reboot.target
new file mode 100644
index 0000000000..ead7f1bc8c
--- /dev/null
+++ b/units/hibernate-then-reboot.target
@@ -0,0 +1,16 @@
+#  SPDX-License-Identifier: LGPL-2.1+
+#
+#  This file is part of systemd.
+#
+#  systemd is free software; you can redistribute it and/or modify it
+#  under the terms of the GNU Lesser General Public License as published by
+#  the Free Software Foundation; either version 2.1 of the License, or
+#  (at your option) any later version.
+
+[Unit]
+Description=Hibernate and reboot after it
+Documentation=man:systemd.special(7)
+DefaultDependencies=no
+Requires=systemd-hibernate-then-reboot.service
+After=systemd-hibernate-then-reboot.service
+StopWhenUnneeded=yes
diff --git a/units/meson.build b/units/meson.build
index d69508467f..8623e90656 100644
--- a/units/meson.build
+++ b/units/meson.build
@@ -21,8 +21,9 @@ units = [
          'runlevel5.target default.target'],
         ['halt.target',                         ''],
         ['hibernate.target',                    'ENABLE_HIBERNATE'],
+        ['hibernate-then-reboot.target',        'ENABLE_HIBERNATE'],
         ['hybrid-sleep.target',                 'ENABLE_HIBERNATE'],
-        ['suspend-then-hibernate.target',         'ENABLE_HIBERNATE'],
+        ['suspend-then-hibernate.target',       'ENABLE_HIBERNATE'],
         ['initrd-fs.target',                    ''],
         ['initrd-root-device.target',           ''],
         ['initrd-root-fs.target',               ''],
@@ -146,6 +147,7 @@ in_units = [
         ['systemd-halt.service',                 ''],
         ['systemd-hibernate-resume@.service',    'ENABLE_HIBERNATE'],
         ['systemd-hibernate.service',            'ENABLE_HIBERNATE'],
+        ['systemd-hibernate-then-reboot.service', 'ENABLE_HIBERNATE'],
         ['systemd-hybrid-sleep.service',         'ENABLE_HIBERNATE'],
         ['systemd-suspend-then-hibernate.service', 'ENABLE_HIBERNATE'],
         ['systemd-hostnamed.service',            'ENABLE_HOSTNAMED',
diff --git a/units/systemd-hibernate-then-reboot.service.in b/units/systemd-hibernate-then-reboot.service.in
new file mode 100644
index 0000000000..613c4f2900
--- /dev/null
+++ b/units/systemd-hibernate-then-reboot.service.in
@@ -0,0 +1,19 @@
+#  SPDX-License-Identifier: LGPL-2.1+
+#
+#  This file is part of systemd.
+#
+#  systemd is free software; you can redistribute it and/or modify it
+#  under the terms of the GNU Lesser General Public License as published by
+#  the Free Software Foundation; either version 2.1 of the License, or
+#  (at your option) any later version.
+
+[Unit]
+Description=Hibernate and reboot after it
+Documentation=man:systemd-suspend.service(8)
+DefaultDependencies=no
+Requires=sleep.target
+After=sleep.target
+
+[Service]
+Type=oneshot
+ExecStart=@rootlibexecdir@/systemd-sleep hibernate-then-reboot
